name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_RELEASE_LTO: fat
  CARGO_PROFILE_RELEASE_STRIP: symbols
  CARGO_BUILD_DEP_INFO_BASEDIR: "."

concurrency:
  group: "release"
  cancel-in-progress: true

jobs:
  build-linux:
    name: Build Linux dist artifacts
    permissions:
      actions: write

    env:
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
      CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_RUSTFLAGS: -C target-feature=+crt-static


    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install system packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y musl musl-dev musl-tools gcc-aarch64-linux-gnu libc6-arm64-cross

      - name: Install rust targets
        run: rustup target add x86_64-unknown-linux-gnu x86_64-unknown-linux-musl aarch64-unknown-linux-gnu

      - name: Build dist artifacts
        run: cargo dist --target x86_64-unknown-linux-gnu --target x86_64-unknown-linux-musl --target aarch64-unknown-linux-gnu

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: boflink-dist-linux
          path: |
            target/dist/*.tar.gz
            target/dist/*.tar.gz.sha256
          retention-days: 1

  build-windows:
    name: Build Windows dist artifacts
    permissions:
      actions: write

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build dist artifacts
        run: cargo dist

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: boflink-dist-windows
          path: |
            target/dist/*.zip
            target/dist/*.zip.sha256
          retention-days: 1

  release:
    name: Create Release
    needs: [build-linux, build-windows]

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: boflink-dist-*
          merge-multiple: true

      - name: Create a new Github release
        env:
          GIT_TAG: ${{ github.ref_name }}
          GH_TOKEN: ${{ github.token }}
        run: gh release create $GIT_TAG -d -t "Boflink $GIT_TAG" -n "" --verify-tag ./dist/*
